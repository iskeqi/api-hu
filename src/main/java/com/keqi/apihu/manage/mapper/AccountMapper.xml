<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keqi.apihu.manage.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.keqi.apihu.manage.domain.AccountDO">
    <!--@mbg.generated-->
    <!--@Table sys_account-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, account, nick_name, post, `password`, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_account
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from sys_account
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.keqi.apihu.manage.domain.AccountDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_account (account, nick_name, post, 
      `password`, create_time, update_time
      )
    values (#{account,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{post,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, now(), now()
      )
  </insert>

  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.keqi.apihu.manage.domain.AccountDO" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="post != null">
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.keqi.apihu.manage.domain.AccountDO">
    <!--@mbg.generated-->
    update sys_account
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
        update_time = now(),
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.keqi.apihu.manage.domain.AccountDO">
    <!--@mbg.generated-->
    update sys_account
    set account = #{account,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      post = #{post,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <delete id="batchDelete">
    delete from sys_account where id in
    <foreach collection="ids" open="(" close=")" separator="," item="id">
      #{id}
    </foreach>
  </delete>

  <select id="count" resultType="long">
    select count(*)
    from sys_account
    <where>
      <if test="searchName != null and searchName != ''">
        account like #{searchValue,jdbcType=VARCHAR}
        or
        nick_name like #{searchValue,jdbcType=VARCHAR}
      </if>
    </where>

  </select>

  <select id="listAccount" resultMap="BaseResultMap">
    select
            id, account, nick_name, post, password, create_time, update_time
    from sys_account
    <where>
      <if test="searchName != null and searchName != ''">
        account like #{searchValue,jdbcType=VARCHAR}
        or
        nick_name like #{searchValue,jdbcType=VARCHAR}
      </if>
    </where>
    <if test="pageSize >= 0">
      limit #{offset}, #{pageSize}
    </if>
  </select>

</mapper>